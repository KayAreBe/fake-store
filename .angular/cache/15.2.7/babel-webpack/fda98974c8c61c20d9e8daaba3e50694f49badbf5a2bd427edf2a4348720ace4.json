{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class CartService {\n  constructor() {\n    this.cartItemList = [];\n    this.productList = new BehaviorSubject([]);\n  }\n  getProduct() {\n    return this.productList.asObservable();\n  }\n  setProduct(product) {\n    this.cartItemList.push(...product);\n    this.productList.next(product);\n  }\n  addtoCart(product) {\n    this.cartItemList.push(product);\n    this.productList.next(this.cartItemList);\n    this.getTotalPrice();\n    console;\n  }\n  getTotalPrice() {\n    let grandTotal = 0;\n    this.cartItemList.map(a => {\n      grandTotal += a.total;\n    });\n  }\n  removeCartItem(product) {\n    this.cartItemList.map((a, index) => {\n      if (product.id === a.id) {\n        this.cartItemList.splice(index, 1);\n      }\n    });\n  }\n  removeAllCart() {\n    this.cartItemList = [];\n    this.productList.next(this.cartItemList);\n  }\n}\nCartService.ɵfac = function CartService_Factory(t) {\n  return new (t || CartService)();\n};\nCartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CartService,\n  factory: CartService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,WAAW;EAKtBC;IAHO,iBAAY,GAAS,EAAE;IACvB,gBAAW,GAAG,IAAIF,eAAe,CAAM,EAAE,CAAC;EAEjC;EAEhBG,UAAU;IACR,OAAO,IAAI,CAACC,WAAW,CAACC,YAAY,EAAE;EACxC;EAEAC,UAAU,CAACC,OAAa;IACtB,IAAI,CAACC,YAAY,CAACC,IAAI,CAAC,GAAGF,OAAO,CAAC;IAClC,IAAI,CAACH,WAAW,CAACM,IAAI,CAACH,OAAO,CAAC;EAChC;EAEAI,SAAS,CAACJ,OAAa;IACrB,IAAI,CAACC,YAAY,CAACC,IAAI,CAACF,OAAO,CAAC;IAC/B,IAAI,CAACH,WAAW,CAACM,IAAI,CAAC,IAAI,CAACF,YAAY,CAAC;IACxC,IAAI,CAACI,aAAa,EAAE;IACpBC,OAAO;EACT;EAEAD,aAAa;IACX,IAAIE,UAAU,GAAG,CAAC;IAClB,IAAI,CAACN,YAAY,CAACO,GAAG,CAAEC,CAAK,IAAG;MAC7BF,UAAU,IAAIE,CAAC,CAACC,KAAK;IACvB,CAAC,CAAC;EACJ;EAEAC,cAAc,CAACX,OAAa;IAC1B,IAAI,CAACC,YAAY,CAACO,GAAG,CAAC,CAACC,CAAK,EAAEG,KAAW,KAAG;MAC1C,IAAGZ,OAAO,CAACa,EAAE,KAAKJ,CAAC,CAACI,EAAE,EAAC;QACrB,IAAI,CAACZ,YAAY,CAACa,MAAM,CAACF,KAAK,EAAC,CAAC,CAAC;;IAErC,CAAC,CAAC;EACJ;EAEAG,aAAa;IACX,IAAI,CAACd,YAAY,GAAG,EAAE;IACtB,IAAI,CAACJ,WAAW,CAACM,IAAI,CAAC,IAAI,CAACF,YAAY,CAAC;EAC1C;;AAzCWP,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAsB,SAAXtB,WAAW;EAAAuB,YAFV;AAAM","names":["BehaviorSubject","CartService","constructor","getProduct","productList","asObservable","setProduct","product","cartItemList","push","next","addtoCart","getTotalPrice","console","grandTotal","map","a","total","removeCartItem","index","id","splice","removeAllCart","factory","providedIn"],"sourceRoot":"","sources":["/Users/dalearnermacm1106/Documents/GitHub/fake-store/src/app/services/cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  public cartItemList : any = [];\n  public productList = new BehaviorSubject<any>([]);\n\n  constructor() { }\n\n  getProduct(){\n    return this.productList.asObservable();\n  }\n\n  setProduct(product : any){\n    this.cartItemList.push(...product);\n    this.productList.next(product);\n  }\n\n  addtoCart(product : any){\n    this.cartItemList.push(product);\n    this.productList.next(this.cartItemList);\n    this.getTotalPrice();\n    console\n  }\n\n  getTotalPrice(){\n    let grandTotal = 0;\n    this.cartItemList.map((a:any)=>{\n      grandTotal += a.total;\n    })\n  }\n\n  removeCartItem(product : any){\n    this.cartItemList.map((a:any, index : any)=>{\n      if(product.id === a.id){\n        this.cartItemList.splice(index,1);\n      }\n    })\n  }\n\n  removeAllCart(){\n    this.cartItemList = [];\n    this.productList.next(this.cartItemList);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}